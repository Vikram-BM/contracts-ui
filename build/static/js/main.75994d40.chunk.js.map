{"version":3,"sources":["components/Mention.js","components/TextWithMarks.js","components/ClauseRenderer.js","components/BlockRenderer.js","App.js","index.js"],"names":["Mention","_ref","node","color","children","value","text","map","child","join","_jsx","className","style","backgroundColor","TextWithMarks","bold","italic","underline","type","content","_Fragment","i","ClauseRenderer","_jsxs","clauseNumber","c","BlockRenderer","App","documentData","setDocumentData","useState","useEffect","structured","nodes","counter","traverse","items","item","withNumber","_objectSpread","assignClauseNumbers","data","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.75994d40.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Mention({ node }) {\r\n  const { color, children, value } = node\r\n  \r\n  // Render the mention text directly from children or value\r\n  const text = children ? children.map(child => child.text).join('') : value\r\n  \r\n  return (\r\n    <span className=\"mention\" style={{ backgroundColor: color }}>\r\n      {text}\r\n    </span>\r\n  )\r\n}","import React from 'react'\r\nimport Mention from './Mention'\r\n\r\nexport default function TextWithMarks({ node }) {\r\n  const { text, bold, italic, underline, children, type } = node\r\n  \r\n  // Handle mention type\r\n  if (type === 'mention') {\r\n    return <Mention node={node} />\r\n  }\r\n  \r\n  // Handle plain text\r\n  if (text != null) {\r\n    let content = text\r\n    if (bold) content = <strong>{content}</strong>\r\n    if (italic) content = <em>{content}</em>\r\n    if (underline) content = <u>{content}</u>\r\n    return <>{content}</>\r\n  }\r\n  \r\n  // Handle children\r\n  if (children) {\r\n    let content = children.map((child, i) => <TextWithMarks key={i} node={child} />)\r\n    if (bold) content = <strong>{content}</strong>\r\n    if (italic) content = <em>{content}</em>\r\n    if (underline) content = <u>{content}</u>\r\n    return <>{content}</>\r\n  }\r\n  \r\n  return null\r\n}","import React from 'react'\r\nimport BlockRenderer from './BlockRenderer'\r\n\r\nexport default function ClauseRenderer({ node }) {\r\n  return (\r\n    <div className=\"clause\">\r\n      <div className=\"clause-number\">{node.clauseNumber}.</div>\r\n      <div className=\"clause-content\">\r\n        {node.children.map((c, i) => <BlockRenderer key={i} node={c} />)}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport TextWithMarks from './TextWithMarks'\r\nimport ClauseRenderer from './ClauseRenderer'\r\nimport Mention from './Mention'\r\n\r\nexport default function BlockRenderer({ node }) {\r\n  if (!node) return null\r\n  \r\n  const { type, children, text } = node\r\n  \r\n  // Handle text nodes\r\n  if (text != null) {\r\n    return <TextWithMarks node={node} />\r\n  }\r\n  \r\n  switch (type) {\r\n    case 'h1': \r\n      return <h1>{children?.map((c, i) => <TextWithMarks key={i} node={c} />)}</h1>\r\n    case 'h4': \r\n      return <h4>{children?.map((c, i) => <TextWithMarks key={i} node={c} />)}</h4>\r\n    case 'p': \r\n      return <p>{children?.map((c, i) => <TextWithMarks key={i} node={c} />)}</p>\r\n    case 'ul': \r\n      return <ul>{children?.map((c, i) => <BlockRenderer key={i} node={c} />)}</ul>\r\n    case 'li': \r\n      return <li>{children?.map((c, i) => <BlockRenderer key={i} node={c} />)}</li>\r\n    case 'lic': \r\n      // List item content - render as span to avoid nested list issues\r\n      return <span>{children?.map((c, i) => <TextWithMarks key={i} node={c} />)}</span>\r\n    case 'mention': \r\n      return <Mention node={node} />\r\n    case 'clause': \r\n      return <ClauseRenderer node={node} />\r\n    case 'block':\r\n      // Generic block container\r\n      return <div className=\"block\">{children?.map((c, i) => <BlockRenderer key={i} node={c} />)}</div>\r\n    case 'doc':\r\n      // Document root\r\n      return <>{children?.map((c, i) => <BlockRenderer key={i} node={c} />)}</>\r\n    default:\r\n      // Fallback for unknown types - render children if they exist\r\n      if (children) {\r\n        return <>{children.map((c, i) => <BlockRenderer key={i} node={c} />)}</>\r\n      }\r\n      // If it's a text node without explicit text property\r\n      if (typeof node === 'string') {\r\n        return <>{node}</>\r\n      }\r\n      return null\r\n  }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport data from './data/input.json'\r\nimport BlockRenderer from './components/BlockRenderer'\r\n\r\nfunction assignClauseNumbers(nodes) {\r\n  let counter = 1\r\n  \r\n  function traverse(items) {\r\n    return items.map(item => {\r\n      if (item.type === 'clause') {\r\n        const withNumber = { ...item, clauseNumber: counter++ }\r\n        if (item.children) {\r\n          withNumber.children = traverse(item.children)\r\n        }\r\n        return withNumber\r\n      }\r\n      if (item.children) {\r\n        return { ...item, children: traverse(item.children) }\r\n      }\r\n      return item\r\n    })\r\n  }\r\n  \r\n  return traverse(nodes)\r\n}\r\n\r\nexport default function App() {\r\n  const [documentData, setDocumentData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // Process the entire document structure\r\n    const structured = assignClauseNumbers(data)\r\n    setDocumentData(structured)\r\n  }, [])\r\n\r\n  if (!documentData) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {documentData.map((node, i) => (\r\n        <BlockRenderer key={i} node={node} />\r\n      ))}\r\n    </div>\r\n  )\r\n}","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './styles.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}