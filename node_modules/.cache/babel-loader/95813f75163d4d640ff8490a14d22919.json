{"ast":null,"code":"import _objectSpread from\"C:/Users/vikra/OneDrive/Desktop/SF Projects/contracts-ui/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import data from'./data/input.json';import BlockRenderer from'./components/BlockRenderer';import{jsx as _jsx}from\"react/jsx-runtime\";function assignClauseNumbers(nodes){let counter=1;function traverse(items){return items.map(item=>{if(item.type==='clause'){const withNumber=_objectSpread(_objectSpread({},item),{},{clauseNumber:counter++});if(item.children){withNumber.children=traverse(item.children);}return withNumber;}if(item.children){return _objectSpread(_objectSpread({},item),{},{children:traverse(item.children)});}return item;});}return traverse(nodes);}export default function App(){const[documentData,setDocumentData]=useState(null);useEffect(()=>{// Process the entire document structure\nconst structured=assignClauseNumbers(data);setDocumentData(structured);},[]);if(!documentData){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:documentData.map((node,i)=>/*#__PURE__*/_jsx(BlockRenderer,{node:node},i))});}","map":{"version":3,"names":["React","useState","useEffect","data","BlockRenderer","jsx","_jsx","assignClauseNumbers","nodes","counter","traverse","items","map","item","type","withNumber","_objectSpread","clauseNumber","children","App","documentData","setDocumentData","structured","className","node","i"],"sources":["C:/Users/vikra/OneDrive/Desktop/SF Projects/contracts-ui/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport data from './data/input.json'\r\nimport BlockRenderer from './components/BlockRenderer'\r\n\r\nfunction assignClauseNumbers(nodes) {\r\n  let counter = 1\r\n  \r\n  function traverse(items) {\r\n    return items.map(item => {\r\n      if (item.type === 'clause') {\r\n        const withNumber = { ...item, clauseNumber: counter++ }\r\n        if (item.children) {\r\n          withNumber.children = traverse(item.children)\r\n        }\r\n        return withNumber\r\n      }\r\n      if (item.children) {\r\n        return { ...item, children: traverse(item.children) }\r\n      }\r\n      return item\r\n    })\r\n  }\r\n  \r\n  return traverse(nodes)\r\n}\r\n\r\nexport default function App() {\r\n  const [documentData, setDocumentData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // Process the entire document structure\r\n    const structured = assignClauseNumbers(data)\r\n    setDocumentData(structured)\r\n  }, [])\r\n\r\n  if (!documentData) {\r\n    return <div>Loading...</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {documentData.map((node, i) => (\r\n        <BlockRenderer key={i} node={node} />\r\n      ))}\r\n    </div>\r\n  )\r\n}"],"mappings":"6IAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,aAAa,KAAM,4BAA4B,QAAAC,GAAA,IAAAC,IAAA,yBAEtD,QAAS,CAAAC,mBAAmBA,CAACC,KAAK,CAAE,CAClC,GAAI,CAAAC,OAAO,CAAG,CAAC,CAEf,QAAS,CAAAC,QAAQA,CAACC,KAAK,CAAE,CACvB,MAAO,CAAAA,KAAK,CAACC,GAAG,CAACC,IAAI,EAAI,CACvB,GAAIA,IAAI,CAACC,IAAI,GAAK,QAAQ,CAAE,CAC1B,KAAM,CAAAC,UAAU,CAAAC,aAAA,CAAAA,aAAA,IAAQH,IAAI,MAAEI,YAAY,CAAER,OAAO,EAAE,EAAE,CACvD,GAAII,IAAI,CAACK,QAAQ,CAAE,CACjBH,UAAU,CAACG,QAAQ,CAAGR,QAAQ,CAACG,IAAI,CAACK,QAAQ,CAAC,CAC/C,CACA,MAAO,CAAAH,UAAU,CACnB,CACA,GAAIF,IAAI,CAACK,QAAQ,CAAE,CACjB,OAAAF,aAAA,CAAAA,aAAA,IAAYH,IAAI,MAAEK,QAAQ,CAAER,QAAQ,CAACG,IAAI,CAACK,QAAQ,CAAC,GACrD,CACA,MAAO,CAAAL,IAAI,CACb,CAAC,CAAC,CACJ,CAEA,MAAO,CAAAH,QAAQ,CAACF,KAAK,CAAC,CACxB,CAEA,cAAe,SAAS,CAAAW,GAAGA,CAAA,CAAG,CAC5B,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAEtDC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAoB,UAAU,CAAGf,mBAAmB,CAACJ,IAAI,CAAC,CAC5CkB,eAAe,CAACC,UAAU,CAAC,CAC7B,CAAC,CAAE,EAAE,CAAC,CAEN,GAAI,CAACF,YAAY,CAAE,CACjB,mBAAOd,IAAA,QAAAY,QAAA,CAAK,YAAU,CAAK,CAAC,CAC9B,CAEA,mBACEZ,IAAA,QAAKiB,SAAS,CAAC,WAAW,CAAAL,QAAA,CACvBE,YAAY,CAACR,GAAG,CAAC,CAACY,IAAI,CAAEC,CAAC,gBACxBnB,IAAA,CAACF,aAAa,EAASoB,IAAI,CAAEA,IAAK,EAAdC,CAAgB,CACrC,CAAC,CACC,CAAC,CAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}