{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vikra\\\\OneDrive\\\\Desktop\\\\SF Projects\\\\contracts-ui\\\\src\\\\components\\\\BlockRenderer.js\";\nimport React from 'react';\nimport TextWithMarks from './TextWithMarks';\nimport ClauseRenderer from './ClauseRenderer';\nimport Mention from './Mention';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BlockRenderer({\n  node\n}) {\n  if (!node) return null;\n  const {\n    type,\n    children,\n    text\n  } = node;\n\n  // Handle text nodes\n  if (text != null) {\n    return /*#__PURE__*/_jsxDEV(TextWithMarks, {\n      node: node\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n  switch (type) {\n    case 'h1':\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: children === null || children === void 0 ? void 0 : children.map((c, i) => /*#__PURE__*/_jsxDEV(TextWithMarks, {\n          node: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 14\n      }, this);\n    case 'h4':\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: children === null || children === void 0 ? void 0 : children.map((c, i) => /*#__PURE__*/_jsxDEV(TextWithMarks, {\n          node: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this);\n    case 'p':\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: children === null || children === void 0 ? void 0 : children.map((c, i) => /*#__PURE__*/_jsxDEV(TextWithMarks, {\n          node: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    case 'ul':\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: children === null || children === void 0 ? void 0 : children.map((c, i) => /*#__PURE__*/_jsxDEV(BlockRenderer, {\n          node: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    case 'li':\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: children === null || children === void 0 ? void 0 : children.map((c, i) => /*#__PURE__*/_jsxDEV(BlockRenderer, {\n          node: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 43\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    case 'lic':\n      // List item content - render as span to avoid nested list issues\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: children === null || children === void 0 ? void 0 : children.map((c, i) => /*#__PURE__*/_jsxDEV(TextWithMarks, {\n          node: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 45\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 14\n      }, this);\n    case 'mention':\n      return /*#__PURE__*/_jsxDEV(Mention, {\n        node: node\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 14\n      }, this);\n    case 'clause':\n      return /*#__PURE__*/_jsxDEV(ClauseRenderer, {\n        node: node\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 14\n      }, this);\n    case 'block':\n      // Generic block container\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"block\",\n        children: children === null || children === void 0 ? void 0 : children.map((c, i) => /*#__PURE__*/_jsxDEV(BlockRenderer, {\n          node: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 62\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    case 'doc':\n      // Document root\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: children === null || children === void 0 ? void 0 : children.map((c, i) => /*#__PURE__*/_jsxDEV(BlockRenderer, {\n          node: c\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 41\n        }, this))\n      }, void 0, false);\n    default:\n      // Fallback for unknown types - render children if they exist\n      if (children) {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: children.map((c, i) => /*#__PURE__*/_jsxDEV(BlockRenderer, {\n            node: c\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 42\n          }, this))\n        }, void 0, false);\n      }\n      // If it's a text node without explicit text property\n      if (typeof node === 'string') {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: node\n        }, void 0, false);\n      }\n      return null;\n  }\n}\n_c = BlockRenderer;\nvar _c;\n$RefreshReg$(_c, \"BlockRenderer\");","map":{"version":3,"names":["React","TextWithMarks","ClauseRenderer","Mention","jsxDEV","_jsxDEV","Fragment","_Fragment","BlockRenderer","node","type","children","text","fileName","_jsxFileName","lineNumber","columnNumber","map","c","i","className","_c","$RefreshReg$"],"sources":["C:/Users/vikra/OneDrive/Desktop/SF Projects/contracts-ui/src/components/BlockRenderer.js"],"sourcesContent":["import React from 'react'\r\nimport TextWithMarks from './TextWithMarks'\r\nimport ClauseRenderer from './ClauseRenderer'\r\nimport Mention from './Mention'\r\n\r\nexport default function BlockRenderer({ node }) {\r\n  if (!node) return null\r\n  \r\n  const { type, children, text } = node\r\n  \r\n  // Handle text nodes\r\n  if (text != null) {\r\n    return <TextWithMarks node={node} />\r\n  }\r\n  \r\n  switch (type) {\r\n    case 'h1': \r\n      return <h1>{children?.map((c, i) => <TextWithMarks key={i} node={c} />)}</h1>\r\n    case 'h4': \r\n      return <h4>{children?.map((c, i) => <TextWithMarks key={i} node={c} />)}</h4>\r\n    case 'p': \r\n      return <p>{children?.map((c, i) => <TextWithMarks key={i} node={c} />)}</p>\r\n    case 'ul': \r\n      return <ul>{children?.map((c, i) => <BlockRenderer key={i} node={c} />)}</ul>\r\n    case 'li': \r\n      return <li>{children?.map((c, i) => <BlockRenderer key={i} node={c} />)}</li>\r\n    case 'lic': \r\n      // List item content - render as span to avoid nested list issues\r\n      return <span>{children?.map((c, i) => <TextWithMarks key={i} node={c} />)}</span>\r\n    case 'mention': \r\n      return <Mention node={node} />\r\n    case 'clause': \r\n      return <ClauseRenderer node={node} />\r\n    case 'block':\r\n      // Generic block container\r\n      return <div className=\"block\">{children?.map((c, i) => <BlockRenderer key={i} node={c} />)}</div>\r\n    case 'doc':\r\n      // Document root\r\n      return <>{children?.map((c, i) => <BlockRenderer key={i} node={c} />)}</>\r\n    default:\r\n      // Fallback for unknown types - render children if they exist\r\n      if (children) {\r\n        return <>{children.map((c, i) => <BlockRenderer key={i} node={c} />)}</>\r\n      }\r\n      // If it's a text node without explicit text property\r\n      if (typeof node === 'string') {\r\n        return <>{node}</>\r\n      }\r\n      return null\r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}